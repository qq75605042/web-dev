version: '3'

services:
  nginx:
    build:
     context: ./nginx
     dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ${APP_CODE_PATH}:/var/www
      - ${NGINX_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITE_PATH}:/etc/nginx/sites-available
    depends_on:
      - php7
      - php5
    networks: 
      - frontend
      - backend
  
  php7:
    build:
      context: ./php72
      dockerfile: Dockerfile
    volumes:
     - ${APP_CODE_PATH}:/var/www
     - ./php72/debug_log:/var/log/xdebug
    ports:
      - "9099:9099"
    networks: 
      - backend

  php5:
    build:
      context: ./php5
      dockerfile: Dockerfile
    volumes:
     - ${APP_CODE_PATH}:/var/www
    networks: 
      - backend

  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    environment:
        - MYSQL_ROOT_PASSWORD=root
        - TZ=Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/data:/var/lib/mysql

  beanstalkd:
    build:
      context: ./beanstalkd
      dockerfile: Dockerfile
    ports:
      - "11300:11300"

  beanstalkd-console:
    build:
      context: ./beanstalkd_console
      dockerfile: Dockerfile
    ports:
      - "6080:2080"
    depends_on:
        - beanstalkd

# use "docker volume create --name=postgresdb" instead of direct mount volumes
# don't forget add top-level volumes "postgresdb"
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGD​​ATA=/tmp
    volumes:
      - postgresdb:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks: 
      - backend

  redis:
    image: redis:5
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.3
    container_name: elastic
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.3
    container_name: elastic2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./esdata2:/usr/share/elasticsearch/data
    networks:
      - esnet

  kibana:
    image: docker.elastic.co/kibana/kibana:6.4.3
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - esnet

networks: 
  frontend:
  backend:
  esnet:

volumes:
  postgresdb:
    external: true
